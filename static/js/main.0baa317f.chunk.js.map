{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","id","username","getUser","userId","usersFromServer","find","getTodos","App","useState","setTitle","setUser","setTodos","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","isValid","trim","length","newTodo","reduce","maxId","Math","max","Number","prevTodos","htmlFor","type","placeholder","value","onChange","target","defaultValue","disabled","userSelect","ReactDOM","render","document","getElementById"],"mappings":"4OAOaA,EAA4B,SAAC,GAA+B,IAAD,IAA5BC,KAAQC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACxD,OACE,mBACEC,UAAU,WACVC,KAAI,iBAAYF,GAFlB,SAIGD,KCHMI,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,0BACE,UAAQ,IACRH,UAAWI,IACT,WAAY,CAAE,sBAAuBD,EAAKE,YAH9C,UAOE,oBAAIL,UAAU,kBAAd,SAAiCG,EAAKG,QAEtC,mBAAGN,UAAU,WAAWC,KAAK,2BAA7B,SACGE,EAAKN,MAAQ,cAAC,EAAD,CAAUA,KAAMM,EAAKN,aCd9BU,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKO,UCZb,GACb,CACEA,GAAI,EACJZ,KAAM,gBACNa,SAAU,OACVZ,MAAO,qBAET,CACEW,GAAI,EACJZ,KAAM,eACNa,SAAU,YACVZ,MAAO,qBAET,CACEW,GAAI,EACJZ,KAAM,mBACNa,SAAU,WACVZ,MAAO,sBAET,CACEW,GAAI,EACJZ,KAAM,mBACNa,SAAU,WACVZ,MAAO,6BAET,CACEW,GAAI,EACJZ,KAAM,mBACNa,SAAU,SACVZ,MAAO,4BAET,CACEW,GAAI,EACJZ,KAAM,uBACNa,SAAU,mBACVZ,MAAO,2BAET,CACEW,GAAI,EACJZ,KAAM,kBACNa,SAAU,eACVZ,MAAO,0BAET,CACEW,GAAI,EACJZ,KAAM,2BACNa,SAAU,gBACVZ,MAAO,wBAET,CACEW,GAAI,EACJZ,KAAM,kBACNa,SAAU,WACVZ,MAAO,2BAET,CACEW,GAAI,GACJZ,KAAM,qBACNa,SAAU,iBACVZ,MAAO,2BCjDX,SAASa,EAAQC,GAIf,OAHkBC,EAAgBC,MAAK,SAAAlB,GAAI,OAAIA,EAAKa,KAAOG,MAGvC,KAGf,IAAMG,ECjBE,CACb,CACEN,GAAI,EACJJ,MAAO,qBACPD,WAAW,EACXQ,OAAQ,GAEV,CACEH,GAAI,GACJJ,MAAO,kBACPD,WAAW,EACXQ,OAAQ,GAEV,CACEH,GAAI,EACJJ,MAAO,qCACPD,WAAW,EACXQ,OAAQ,IDAoCJ,KAAI,SAAAN,GAAI,kCACnDA,GADmD,IAEtDN,KAAMe,EAAQT,EAAKU,aAGRI,EAAoB,WAC/B,MAA0BC,mBAAS,IAAnC,mBAAOZ,EAAP,KAAca,EAAd,KACA,EAAwBD,mBAAiB,IAAzC,mBAAOrB,EAAP,KAAauB,EAAb,KACA,EAA0BF,mBAASF,GAAnC,mBAAOR,EAAP,KAAca,EAAd,KACA,EAAoCH,mBAAS,IAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAkCL,mBAAS,IAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KAmCA,OACE,sBAAKzB,UAAU,MAAf,UACE,+CAEA,uBACE0B,OAAO,aACPC,OAAO,OACPC,SAxCe,SAACC,GACpBA,EAAMC,iBACN,IAAIC,GAAU,EAYd,GAVKzB,EAAM0B,QAAkC,IAAxB1B,EAAM0B,OAAOC,SAChCV,EAAc,wBACdQ,GAAU,GAGPlC,IACH4B,EAAa,wBACbM,GAAU,GAGRA,EAAS,CACX,IAIMG,EAAgB,CACpBxB,GALgBF,EAAM2B,QACtB,SAACC,EAAOjC,GAAR,OAAiBkC,KAAKC,IAAIF,EAAOjC,EAAKO,MAAK,GACzC,EAIFJ,MAAOA,EAAM0B,OACbnB,OAAQ0B,OAAO1C,GACfQ,WAAW,EACXR,KAAMe,EAAQ2B,OAAO1C,KAGvBwB,GAAS,SAACmB,GAAD,4BAAmBA,GAAnB,CAA8BN,OACvCf,EAAS,IACTC,EAAQ,MAQR,UAKE,sBAAKpB,UAAU,QAAf,UACE,uBAAOyC,QAAQ,QAAf,oBAGA,uBACEC,KAAK,OACLhC,GAAG,QACH,UAAQ,aACRiC,YAAY,gBACZC,MAAOtC,EACPuC,SAAU,SAAChB,GACTV,EAASU,EAAMiB,OAAOF,OACtBrB,EAAc,OAGjBD,GAAc,sBAAMtB,UAAU,QAAhB,SAAyBsB,OAG1C,sBAAKtB,UAAU,QAAf,UACE,uBAAOyC,QAAQ,aAAf,4BAGA,yBACE/B,GAAG,aACH,UAAQ,aACRkC,MAAO/C,EACPgD,SAAU,SAAChB,GACTT,EAAQS,EAAMiB,OAAOF,OACrBnB,EAAa,KAEfsB,aAAa,GARf,UAUE,wBAAQH,MAAM,GAAGI,UAAQ,EAAzB,2BACClC,EAAgBL,KAAI,SAACwC,GAAD,OACnB,wBAA4BL,MAAOK,EAAWvC,GAA9C,SACGuC,EAAWnD,MADDmD,EAAWvC,UAK3Bc,GAAa,sBAAMxB,UAAU,QAAhB,SAAyBwB,OAGzC,wBAAQkB,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAUlC,MAAOA,QEnHvB0C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0baa317f.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../Type/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user: { name, email } }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../Type/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id=\"1\"\n      className={classNames(\n        'TodoInfo', { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n        {todo.user && <UserInfo user={todo.user} />}\n      </a>\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../Type/Todo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './Type/User';\nimport { Todo } from './Type/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nexport const getTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC<{}> = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState<string>('');\n  const [todos, setTodos] = useState(getTodos);\n  const [titleError, setTitleError] = useState('');\n  const [userError, setUserError] = useState('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    let isValid = true;\n\n    if (!title.trim() || title.trim().length === 0) {\n      setTitleError('Please enter a title');\n      isValid = false;\n    }\n\n    if (!user) {\n      setUserError('Please choose a user');\n      isValid = false;\n    }\n\n    if (isValid) {\n      const newTodoId = todos.reduce(\n        (maxId, todo) => Math.max(maxId, todo.id), 0,\n      ) + 1;\n\n      const newTodo: Todo = {\n        id: newTodoId,\n        title: title.trim(),\n        userId: Number(user),\n        completed: false,\n        user: getUser(Number(user)),\n      };\n\n      setTodos((prevTodos) => [...prevTodos, newTodo]);\n      setTitle('');\n      setUser('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:\n          </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTitleError('');\n            }}\n          />\n          {titleError && <span className=\"error\">{titleError}</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            Choose a user:\n          </label>\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={(event) => {\n              setUser(event.target.value);\n              setUserError('');\n            }}\n            defaultValue=\"\"\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map((userSelect) => (\n              <option key={userSelect.id} value={userSelect.id}>\n                {userSelect.name}\n              </option>\n            ))}\n          </select>\n          {userError && <span className=\"error\">{userError}</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}